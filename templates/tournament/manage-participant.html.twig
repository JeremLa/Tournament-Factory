{% extends "base.html.twig" %}
{% block stylesheets %}
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/tagmanager/3.0.2/tagmanager.min.css">
    <link rel="stylesheet" type="text/css" href="{{ asset('css/tournament/manageParticipant.css') }}">
{% endblock %}
{% block title %}
    {{ 'tournament.create' | trans }}
{% endblock %}

{% block body %}

    {{ form_start(form) }}
    <div class="form-group">
        {{ form_label(form.tags) }}
        <br>
        {{ form_widget(form.tags) }}
    </div>

    <button type="submit" class="btn btn-primary btn-block">{{ 'form.save' | trans }}</button>
    {{ form_end(form) }}

{% endblock %}

{% block javascripts %}

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tagmanager/3.0.2/tagmanager.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-3-typeahead/4.0.2/bootstrap3-typeahead.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            let numberMax = {{ (tournament.MaxParticipantNumber) }};
            let number = {{ playerNumber }};

                $.ajax({
                    url: '{{ path('searchInUsers', {tournamentId: tournament.id}) }}',
                    method: 'GET',
                    success: (data) => {
                        initAutoComplete(data, numberMax, number);
                    }
                });

            function initAutoComplete(data, numberMax, number) {
                const tagApi = $(".tm-input").tagsManager({
                    prefilled : data,
                    backspace: []
                });
                $(".tm-input").on('tm:pushed', function(e, tag) {
                    number++;
                    if(number > numberMax){
                        tagApi.tagsManager("popTag");
                        alert('Nombre de participant maximum atteint');
                        number--;
                    }
                });

                $(".tm-input").on('tm:splicing', function(e, tag) {
                    number--;
                });

                const path = '{{ path('searchNotInUsers', {tournamentId: tournament.id}) }}?search=';
                let finish = true;
                $(".typeahead").typeahead({
                    name: 'tags',
                    displayKey: 'name',
                    source: function (query, process) {
                        if(finish) {
                            $.ajax({
                                method: 'GET',
                                url: path + $('#manage_participant_tags')[0].value,
                                beforeSend: () => {
                                        finish = false;
                                        return true;
                                },
                                success: function (data) {
                                    return process(data);
                                },
                                complete: () => {
                                    finish = true;
                                }

                        });
                        }
                    },
                    afterSelect :function (item){
                        tagApi.tagsManager("pushTag", item);
                    }
                });

            }

        });
    </script>
{% endblock %}